// Copyright 2020 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tensorflow/core/tpu/kernels/tpu_executable_info.proto

package kernels

import (
	data "github.com/airenas/go-tf-serving-protogen/tensorflow/compiler/xla/data"
	service "github.com/airenas/go-tf-serving-protogen/tensorflow/compiler/xla/service"
	framework "github.com/airenas/go-tf-serving-protogen/tensorflow/core/framework"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// A serialization of TPUExecutable. Only includes fields necessary to load
// and execute a program on a worker node.
type TPUExecutableInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The shapes of the inputs and outputs.
	InputShapes []*data.ShapeProto `protobuf:"bytes,2,rep,name=input_shapes,json=inputShapes,proto3" json:"input_shapes,omitempty"`
	OutputShape *data.ShapeProto   `protobuf:"bytes,3,opt,name=output_shape,json=outputShape,proto3" json:"output_shape,omitempty"`
	// Dynamic output indices indicate which outputs have dynamic dimensions.
	DynamicOutputIndices []*TPUExecutableInfoProto_ShapeIndex `protobuf:"bytes,11,rep,name=dynamic_output_indices,json=dynamicOutputIndices,proto3" json:"dynamic_output_indices,omitempty"`
	// For each resource variable output, what was the index of the corresponding
	// input and was it updated? The indices are sorted by input order.
	VariableIndices []*TPUExecutableInfoProto_UpdateIndexPair `protobuf:"bytes,10,rep,name=variable_indices,json=variableIndices,proto3" json:"variable_indices,omitempty"`
	// The shapes of the outputs when represented as Tensors. These may not
	// match the output_shape values because we may flatten tensors to avoid
	// excess padding.
	OutputTensorShapes []*framework.TensorShapeProto `protobuf:"bytes,8,rep,name=output_tensor_shapes,json=outputTensorShapes,proto3" json:"output_tensor_shapes,omitempty"`
	// Optional session module for passing XLA computations between TPUCompileOp
	// and TPUExecuteOp. This is needed to support the
	// --xla_dump_hlo_snapshots flag.
	SessionModule *service.HloSnapshot `protobuf:"bytes,5,opt,name=session_module,json=sessionModule,proto3" json:"session_module,omitempty"`
	// The physical device ids assigned to the replicated cores.
	DeviceAssignment *data.DeviceAssignmentProto `protobuf:"bytes,6,opt,name=device_assignment,json=deviceAssignment,proto3" json:"device_assignment,omitempty"`
}

func (x *TPUExecutableInfoProto) Reset() {
	*x = TPUExecutableInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPUExecutableInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPUExecutableInfoProto) ProtoMessage() {}

func (x *TPUExecutableInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPUExecutableInfoProto.ProtoReflect.Descriptor instead.
func (*TPUExecutableInfoProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescGZIP(), []int{0}
}

func (x *TPUExecutableInfoProto) GetInputShapes() []*data.ShapeProto {
	if x != nil {
		return x.InputShapes
	}
	return nil
}

func (x *TPUExecutableInfoProto) GetOutputShape() *data.ShapeProto {
	if x != nil {
		return x.OutputShape
	}
	return nil
}

func (x *TPUExecutableInfoProto) GetDynamicOutputIndices() []*TPUExecutableInfoProto_ShapeIndex {
	if x != nil {
		return x.DynamicOutputIndices
	}
	return nil
}

func (x *TPUExecutableInfoProto) GetVariableIndices() []*TPUExecutableInfoProto_UpdateIndexPair {
	if x != nil {
		return x.VariableIndices
	}
	return nil
}

func (x *TPUExecutableInfoProto) GetOutputTensorShapes() []*framework.TensorShapeProto {
	if x != nil {
		return x.OutputTensorShapes
	}
	return nil
}

func (x *TPUExecutableInfoProto) GetSessionModule() *service.HloSnapshot {
	if x != nil {
		return x.SessionModule
	}
	return nil
}

func (x *TPUExecutableInfoProto) GetDeviceAssignment() *data.DeviceAssignmentProto {
	if x != nil {
		return x.DeviceAssignment
	}
	return nil
}

type TPUHostTransferInfoProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Serialized metadata for a data transfer between device and host.
	SerializedTransfers [][]byte `protobuf:"bytes,2,rep,name=serialized_transfers,json=serializedTransfers,proto3" json:"serialized_transfers,omitempty"`
}

func (x *TPUHostTransferInfoProto) Reset() {
	*x = TPUHostTransferInfoProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPUHostTransferInfoProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPUHostTransferInfoProto) ProtoMessage() {}

func (x *TPUHostTransferInfoProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPUHostTransferInfoProto.ProtoReflect.Descriptor instead.
func (*TPUHostTransferInfoProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescGZIP(), []int{1}
}

func (x *TPUHostTransferInfoProto) GetSerializedTransfers() [][]byte {
	if x != nil {
		return x.SerializedTransfers
	}
	return nil
}

type TPUExecutableInfoProto_UpdateIndexPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index   int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Updated bool  `protobuf:"varint,2,opt,name=updated,proto3" json:"updated,omitempty"`
}

func (x *TPUExecutableInfoProto_UpdateIndexPair) Reset() {
	*x = TPUExecutableInfoProto_UpdateIndexPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPUExecutableInfoProto_UpdateIndexPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPUExecutableInfoProto_UpdateIndexPair) ProtoMessage() {}

func (x *TPUExecutableInfoProto_UpdateIndexPair) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPUExecutableInfoProto_UpdateIndexPair.ProtoReflect.Descriptor instead.
func (*TPUExecutableInfoProto_UpdateIndexPair) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TPUExecutableInfoProto_UpdateIndexPair) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TPUExecutableInfoProto_UpdateIndexPair) GetUpdated() bool {
	if x != nil {
		return x.Updated
	}
	return false
}

type TPUExecutableInfoProto_ShapeIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index []int32 `protobuf:"varint,1,rep,packed,name=index,proto3" json:"index,omitempty"`
}

func (x *TPUExecutableInfoProto_ShapeIndex) Reset() {
	*x = TPUExecutableInfoProto_ShapeIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TPUExecutableInfoProto_ShapeIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TPUExecutableInfoProto_ShapeIndex) ProtoMessage() {}

func (x *TPUExecutableInfoProto_ShapeIndex) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TPUExecutableInfoProto_ShapeIndex.ProtoReflect.Descriptor instead.
func (*TPUExecutableInfoProto_ShapeIndex) Descriptor() ([]byte, []int) {
	return file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescGZIP(), []int{0, 1}
}

func (x *TPUExecutableInfoProto_ShapeIndex) GetIndex() []int32 {
	if x != nil {
		return x.Index
	}
	return nil
}

var File_tensorflow_core_tpu_kernels_tpu_executable_info_proto protoreflect.FileDescriptor

var file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDesc = []byte{
	0x0a, 0x35, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x74, 0x70, 0x75, 0x2f, 0x6b, 0x65, 0x72, 0x6e, 0x65, 0x6c, 0x73, 0x2f, 0x74, 0x70,
	0x75, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x1a, 0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x68, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69,
	0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x78, 0x6c, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x05, 0x0a, 0x16, 0x54, 0x50, 0x55, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x32, 0x0a, 0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x78, 0x6c, 0x61, 0x2e,
	0x53, 0x68, 0x61, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x53, 0x68, 0x61, 0x70, 0x65, 0x12, 0x63, 0x0a, 0x16, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x5f, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x50, 0x55, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x68, 0x61, 0x70,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x14, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x5d, 0x0a, 0x10,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x50, 0x55, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0f, 0x76, 0x61, 0x72, 0x69,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x12, 0x4e, 0x0a, 0x14, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x5f, 0x73, 0x68, 0x61,
	0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x12, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x53, 0x68, 0x61, 0x70, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x0e, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x48, 0x6c, 0x6f, 0x53, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x78, 0x6c, 0x61, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x10, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x41, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x50, 0x61, 0x69, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x1a, 0x22, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x70, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08,
	0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x22, 0x57, 0x0a, 0x18, 0x54, 0x50, 0x55, 0x48, 0x6f, 0x73,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x35, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x42, 0x02, 0x08, 0x01, 0x52, 0x13, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x4a, 0x04, 0x08, 0x01, 0x10, 0x02, 0x42,
	0xb7, 0x01, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x42, 0x16, 0x54, 0x70, 0x75, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x45, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x72, 0x65, 0x6e, 0x61, 0x73,
	0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x70, 0x75, 0x2f, 0x6b, 0x65, 0x72, 0x6e,
	0x65, 0x6c, 0x73, 0xa2, 0x02, 0x03, 0x54, 0x58, 0x58, 0xaa, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73,
	0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xca, 0x02, 0x0a, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0xe2, 0x02, 0x16, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77,
	0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescOnce sync.Once
	file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescData = file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDesc
)

func file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescGZIP() []byte {
	file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescOnce.Do(func() {
		file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescData)
	})
	return file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDescData
}

var file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_goTypes = []interface{}{
	(*TPUExecutableInfoProto)(nil),                 // 0: tensorflow.TPUExecutableInfoProto
	(*TPUHostTransferInfoProto)(nil),               // 1: tensorflow.TPUHostTransferInfoProto
	(*TPUExecutableInfoProto_UpdateIndexPair)(nil), // 2: tensorflow.TPUExecutableInfoProto.UpdateIndexPair
	(*TPUExecutableInfoProto_ShapeIndex)(nil),      // 3: tensorflow.TPUExecutableInfoProto.ShapeIndex
	(*data.ShapeProto)(nil),                        // 4: xla.ShapeProto
	(*framework.TensorShapeProto)(nil),             // 5: tensorflow.TensorShapeProto
	(*service.HloSnapshot)(nil),                    // 6: xla.HloSnapshot
	(*data.DeviceAssignmentProto)(nil),             // 7: xla.DeviceAssignmentProto
}
var file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_depIdxs = []int32{
	4, // 0: tensorflow.TPUExecutableInfoProto.input_shapes:type_name -> xla.ShapeProto
	4, // 1: tensorflow.TPUExecutableInfoProto.output_shape:type_name -> xla.ShapeProto
	3, // 2: tensorflow.TPUExecutableInfoProto.dynamic_output_indices:type_name -> tensorflow.TPUExecutableInfoProto.ShapeIndex
	2, // 3: tensorflow.TPUExecutableInfoProto.variable_indices:type_name -> tensorflow.TPUExecutableInfoProto.UpdateIndexPair
	5, // 4: tensorflow.TPUExecutableInfoProto.output_tensor_shapes:type_name -> tensorflow.TensorShapeProto
	6, // 5: tensorflow.TPUExecutableInfoProto.session_module:type_name -> xla.HloSnapshot
	7, // 6: tensorflow.TPUExecutableInfoProto.device_assignment:type_name -> xla.DeviceAssignmentProto
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_init() }
func file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_init() {
	if File_tensorflow_core_tpu_kernels_tpu_executable_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPUExecutableInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPUHostTransferInfoProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPUExecutableInfoProto_UpdateIndexPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TPUExecutableInfoProto_ShapeIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_goTypes,
		DependencyIndexes: file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_depIdxs,
		MessageInfos:      file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_msgTypes,
	}.Build()
	File_tensorflow_core_tpu_kernels_tpu_executable_info_proto = out.File
	file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_rawDesc = nil
	file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_goTypes = nil
	file_tensorflow_core_tpu_kernels_tpu_executable_info_proto_depIdxs = nil
}
