// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tensorflow/compiler/xla/python/pytree.proto

package python

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PyTreeNodeType int32

const (
	PyTreeNodeType_PY_TREE_KIND_INVALID PyTreeNodeType = 0
	PyTreeNodeType_PY_TREE_KIND_LEAF    PyTreeNodeType = 1
	PyTreeNodeType_PY_TREE_KIND_LIST    PyTreeNodeType = 2
	PyTreeNodeType_PY_TREE_KIND_NONE    PyTreeNodeType = 3
	PyTreeNodeType_PY_TREE_KIND_TUPLE   PyTreeNodeType = 4
	PyTreeNodeType_PY_TREE_KIND_DICT    PyTreeNodeType = 5
)

// Enum value maps for PyTreeNodeType.
var (
	PyTreeNodeType_name = map[int32]string{
		0: "PY_TREE_KIND_INVALID",
		1: "PY_TREE_KIND_LEAF",
		2: "PY_TREE_KIND_LIST",
		3: "PY_TREE_KIND_NONE",
		4: "PY_TREE_KIND_TUPLE",
		5: "PY_TREE_KIND_DICT",
	}
	PyTreeNodeType_value = map[string]int32{
		"PY_TREE_KIND_INVALID": 0,
		"PY_TREE_KIND_LEAF":    1,
		"PY_TREE_KIND_LIST":    2,
		"PY_TREE_KIND_NONE":    3,
		"PY_TREE_KIND_TUPLE":   4,
		"PY_TREE_KIND_DICT":    5,
	}
)

func (x PyTreeNodeType) Enum() *PyTreeNodeType {
	p := new(PyTreeNodeType)
	*p = x
	return p
}

func (x PyTreeNodeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PyTreeNodeType) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_compiler_xla_python_pytree_proto_enumTypes[0].Descriptor()
}

func (PyTreeNodeType) Type() protoreflect.EnumType {
	return &file_tensorflow_compiler_xla_python_pytree_proto_enumTypes[0]
}

func (x PyTreeNodeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PyTreeNodeType.Descriptor instead.
func (PyTreeNodeType) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_pytree_proto_rawDescGZIP(), []int{0}
}

type DictKeysProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StrId []uint32 `protobuf:"varint,1,rep,packed,name=str_id,json=strId,proto3" json:"str_id,omitempty"`
}

func (x *DictKeysProto) Reset() {
	*x = DictKeysProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictKeysProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictKeysProto) ProtoMessage() {}

func (x *DictKeysProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictKeysProto.ProtoReflect.Descriptor instead.
func (*DictKeysProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_pytree_proto_rawDescGZIP(), []int{0}
}

func (x *DictKeysProto) GetStrId() []uint32 {
	if x != nil {
		return x.StrId
	}
	return nil
}

type PyTreeNodeDefProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Recovers the tree structure.
	Arity uint32 `protobuf:"varint,1,opt,name=arity,proto3" json:"arity,omitempty"`
	// Node type.
	Type PyTreeNodeType `protobuf:"varint,2,opt,name=type,proto3,enum=jax.PyTreeNodeType" json:"type,omitempty"`
	// Only set when type == DICT.
	DictKeys *DictKeysProto `protobuf:"bytes,3,opt,name=dict_keys,json=dictKeys,proto3" json:"dict_keys,omitempty"`
}

func (x *PyTreeNodeDefProto) Reset() {
	*x = PyTreeNodeDefProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PyTreeNodeDefProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PyTreeNodeDefProto) ProtoMessage() {}

func (x *PyTreeNodeDefProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PyTreeNodeDefProto.ProtoReflect.Descriptor instead.
func (*PyTreeNodeDefProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_pytree_proto_rawDescGZIP(), []int{1}
}

func (x *PyTreeNodeDefProto) GetArity() uint32 {
	if x != nil {
		return x.Arity
	}
	return 0
}

func (x *PyTreeNodeDefProto) GetType() PyTreeNodeType {
	if x != nil {
		return x.Type
	}
	return PyTreeNodeType_PY_TREE_KIND_INVALID
}

func (x *PyTreeNodeDefProto) GetDictKeys() *DictKeysProto {
	if x != nil {
		return x.DictKeys
	}
	return nil
}

// A Pytree.
type PyTreeDefProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*PyTreeNodeDefProto `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	// Extra strings.
	InternedStrings []string `protobuf:"bytes,2,rep,name=interned_strings,json=internedStrings,proto3" json:"interned_strings,omitempty"`
}

func (x *PyTreeDefProto) Reset() {
	*x = PyTreeDefProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PyTreeDefProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PyTreeDefProto) ProtoMessage() {}

func (x *PyTreeDefProto) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PyTreeDefProto.ProtoReflect.Descriptor instead.
func (*PyTreeDefProto) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_xla_python_pytree_proto_rawDescGZIP(), []int{2}
}

func (x *PyTreeDefProto) GetNodes() []*PyTreeNodeDefProto {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *PyTreeDefProto) GetInternedStrings() []string {
	if x != nil {
		return x.InternedStrings
	}
	return nil
}

var File_tensorflow_compiler_xla_python_pytree_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_xla_python_pytree_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e,
	0x2f, 0x70, 0x79, 0x74, 0x72, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6a,
	0x61, 0x78, 0x22, 0x26, 0x0a, 0x0d, 0x44, 0x69, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x50,
	0x79, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x66, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x61, 0x72, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6a, 0x61, 0x78, 0x2e, 0x50, 0x79, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2f, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6a, 0x61, 0x78, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x4b, 0x65,
	0x79, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4b, 0x65, 0x79,
	0x73, 0x22, 0x6a, 0x0a, 0x0e, 0x50, 0x79, 0x54, 0x72, 0x65, 0x65, 0x44, 0x65, 0x66, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x2d, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6a, 0x61, 0x78, 0x2e, 0x50, 0x79, 0x54, 0x72, 0x65, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x66, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x2a, 0x9e, 0x01,
	0x0a, 0x0e, 0x50, 0x79, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x14, 0x50, 0x59, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x59,
	0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4c, 0x45, 0x41, 0x46, 0x10,
	0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x59, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4b, 0x49, 0x4e,
	0x44, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x59, 0x5f, 0x54,
	0x52, 0x45, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x03, 0x12,
	0x16, 0x0a, 0x12, 0x50, 0x59, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f,
	0x54, 0x55, 0x50, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x59, 0x5f, 0x54, 0x52,
	0x45, 0x45, 0x5f, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x44, 0x49, 0x43, 0x54, 0x10, 0x05, 0x42, 0x8c,
	0x01, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x2e, 0x6a, 0x61, 0x78, 0x42, 0x0b, 0x50, 0x79, 0x74, 0x72,
	0x65, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x72, 0x65, 0x6e, 0x61, 0x73, 0x2f, 0x67, 0x6f,
	0x2d, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x78, 0x6c, 0x61, 0x2f, 0x70, 0x79, 0x74,
	0x68, 0x6f, 0x6e, 0xa2, 0x02, 0x03, 0x4a, 0x58, 0x58, 0xaa, 0x02, 0x03, 0x4a, 0x61, 0x78, 0xca,
	0x02, 0x03, 0x4a, 0x61, 0x78, 0xe2, 0x02, 0x0f, 0x4a, 0x61, 0x78, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x03, 0x4a, 0x61, 0x78, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_compiler_xla_python_pytree_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_xla_python_pytree_proto_rawDescData = file_tensorflow_compiler_xla_python_pytree_proto_rawDesc
)

func file_tensorflow_compiler_xla_python_pytree_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_xla_python_pytree_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_xla_python_pytree_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_xla_python_pytree_proto_rawDescData)
	})
	return file_tensorflow_compiler_xla_python_pytree_proto_rawDescData
}

var file_tensorflow_compiler_xla_python_pytree_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tensorflow_compiler_xla_python_pytree_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_tensorflow_compiler_xla_python_pytree_proto_goTypes = []interface{}{
	(PyTreeNodeType)(0),        // 0: jax.PyTreeNodeType
	(*DictKeysProto)(nil),      // 1: jax.DictKeysProto
	(*PyTreeNodeDefProto)(nil), // 2: jax.PyTreeNodeDefProto
	(*PyTreeDefProto)(nil),     // 3: jax.PyTreeDefProto
}
var file_tensorflow_compiler_xla_python_pytree_proto_depIdxs = []int32{
	0, // 0: jax.PyTreeNodeDefProto.type:type_name -> jax.PyTreeNodeType
	1, // 1: jax.PyTreeNodeDefProto.dict_keys:type_name -> jax.DictKeysProto
	2, // 2: jax.PyTreeDefProto.nodes:type_name -> jax.PyTreeNodeDefProto
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_xla_python_pytree_proto_init() }
func file_tensorflow_compiler_xla_python_pytree_proto_init() {
	if File_tensorflow_compiler_xla_python_pytree_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictKeysProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PyTreeNodeDefProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_xla_python_pytree_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PyTreeDefProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_xla_python_pytree_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_compiler_xla_python_pytree_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_xla_python_pytree_proto_depIdxs,
		EnumInfos:         file_tensorflow_compiler_xla_python_pytree_proto_enumTypes,
		MessageInfos:      file_tensorflow_compiler_xla_python_pytree_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_xla_python_pytree_proto = out.File
	file_tensorflow_compiler_xla_python_pytree_proto_rawDesc = nil
	file_tensorflow_compiler_xla_python_pytree_proto_goTypes = nil
	file_tensorflow_compiler_xla_python_pytree_proto_depIdxs = nil
}
