// Copyright 2023 The TensorFlow Authors. All Rights Reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//==============================================================================

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tensorflow/compiler/mlir/lite/debug/debug_options.proto

package debug

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Additional parameters that control the debug behavior of the Converter.
//
// Next ID: 9
type DebugOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If not empty, dumps MLIR to the specified directory. The initial state of
	// the MLIR after import will be dumped at the beginning of each pass manager
	// run. Additionally, MLIR will be dumped before and after each pass
	// depending on pass names and functions matched using the
	// `mlir_dump_pass_regex` and `mlir_dump_func_regex` values.
	MlirDumpDir *string `protobuf:"bytes,1,opt,name=mlir_dump_dir,json=mlirDumpDir,def=" json:"mlir_dump_dir,omitempty"`
	// Regular expression that matches the names of passes in pascal case (e.g.,
	// FooPass) before/after which MLIR will be dumped. Effective only if
	// mlir_dump_dir is not empty.
	MlirDumpPassRegex *string `protobuf:"bytes,2,opt,name=mlir_dump_pass_regex,json=mlirDumpPassRegex,def=.*" json:"mlir_dump_pass_regex,omitempty"`
	// Regular expression that matches the names of functions to be dumped. MLIR
	// modules are dumped only if there's at least one public function in the
	// module whose name matches the pattern. Effective only if mlir_dump_dir is
	// not empty.
	MlirDumpFuncRegex *string `protobuf:"bytes,3,opt,name=mlir_dump_func_regex,json=mlirDumpFuncRegex,def=.*" json:"mlir_dump_func_regex,omitempty"`
	// If true, report the execution time of each MLIR pass.
	MlirEnableTiming *bool `protobuf:"varint,4,opt,name=mlir_enable_timing,json=mlirEnableTiming,def=0" json:"mlir_enable_timing,omitempty"`
	// Prints MLIR before specified passes. Supports regular expressions for
	// matching against the names of the desired passes.
	MlirPrintIrBefore *string `protobuf:"bytes,5,opt,name=mlir_print_ir_before,json=mlirPrintIrBefore,def=" json:"mlir_print_ir_before,omitempty"`
	// Prints MLIR after specified passes. Supports regular expressions for
	// matching against the names of the desired passes. Currently only prints
	// after a pass if the MLIR is mutated.
	MlirPrintIrAfter *string `protobuf:"bytes,6,opt,name=mlir_print_ir_after,json=mlirPrintIrAfter,def=" json:"mlir_print_ir_after,omitempty"`
	// If true, always print the top-level operation when printing IR for
	// print_ir_[before|after].
	MlirPrintIrModuleScope *bool `protobuf:"varint,7,opt,name=mlir_print_ir_module_scope,json=mlirPrintIrModuleScope,def=1" json:"mlir_print_ir_module_scope,omitempty"`
	// Elide ElementsAttrs with \"...\" that have more elements than the given
	// upper limit.
	MlirElideElementsattrsIfLarger *int64 `protobuf:"varint,8,opt,name=mlir_elide_elementsattrs_if_larger,json=mlirElideElementsattrsIfLarger" json:"mlir_elide_elementsattrs_if_larger,omitempty"`
}

// Default values for DebugOptions fields.
const (
	Default_DebugOptions_MlirDumpDir            = string("")
	Default_DebugOptions_MlirDumpPassRegex      = string(".*")
	Default_DebugOptions_MlirDumpFuncRegex      = string(".*")
	Default_DebugOptions_MlirEnableTiming       = bool(false)
	Default_DebugOptions_MlirPrintIrBefore      = string("")
	Default_DebugOptions_MlirPrintIrAfter       = string("")
	Default_DebugOptions_MlirPrintIrModuleScope = bool(true)
)

func (x *DebugOptions) Reset() {
	*x = DebugOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugOptions) ProtoMessage() {}

func (x *DebugOptions) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugOptions.ProtoReflect.Descriptor instead.
func (*DebugOptions) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescGZIP(), []int{0}
}

func (x *DebugOptions) GetMlirDumpDir() string {
	if x != nil && x.MlirDumpDir != nil {
		return *x.MlirDumpDir
	}
	return Default_DebugOptions_MlirDumpDir
}

func (x *DebugOptions) GetMlirDumpPassRegex() string {
	if x != nil && x.MlirDumpPassRegex != nil {
		return *x.MlirDumpPassRegex
	}
	return Default_DebugOptions_MlirDumpPassRegex
}

func (x *DebugOptions) GetMlirDumpFuncRegex() string {
	if x != nil && x.MlirDumpFuncRegex != nil {
		return *x.MlirDumpFuncRegex
	}
	return Default_DebugOptions_MlirDumpFuncRegex
}

func (x *DebugOptions) GetMlirEnableTiming() bool {
	if x != nil && x.MlirEnableTiming != nil {
		return *x.MlirEnableTiming
	}
	return Default_DebugOptions_MlirEnableTiming
}

func (x *DebugOptions) GetMlirPrintIrBefore() string {
	if x != nil && x.MlirPrintIrBefore != nil {
		return *x.MlirPrintIrBefore
	}
	return Default_DebugOptions_MlirPrintIrBefore
}

func (x *DebugOptions) GetMlirPrintIrAfter() string {
	if x != nil && x.MlirPrintIrAfter != nil {
		return *x.MlirPrintIrAfter
	}
	return Default_DebugOptions_MlirPrintIrAfter
}

func (x *DebugOptions) GetMlirPrintIrModuleScope() bool {
	if x != nil && x.MlirPrintIrModuleScope != nil {
		return *x.MlirPrintIrModuleScope
	}
	return Default_DebugOptions_MlirPrintIrModuleScope
}

func (x *DebugOptions) GetMlirElideElementsattrsIfLarger() int64 {
	if x != nil && x.MlirElideElementsattrsIfLarger != nil {
		return *x.MlirElideElementsattrsIfLarger
	}
	return 0
}

var File_tensorflow_compiler_mlir_lite_debug_debug_options_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDesc = []byte{
	0x0a, 0x37, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x6c, 0x69, 0x72, 0x2f, 0x6c, 0x69, 0x74, 0x65, 0x2f,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x22,
	0xc5, 0x03, 0x0a, 0x0c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x6c, 0x69, 0x72, 0x5f, 0x64, 0x75, 0x6d, 0x70, 0x5f, 0x64, 0x69,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x52, 0x0b, 0x6d, 0x6c, 0x69, 0x72, 0x44,
	0x75, 0x6d, 0x70, 0x44, 0x69, 0x72, 0x12, 0x33, 0x0a, 0x14, 0x6d, 0x6c, 0x69, 0x72, 0x5f, 0x64,
	0x75, 0x6d, 0x70, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x3a, 0x02, 0x2e, 0x2a, 0x52, 0x11, 0x6d, 0x6c, 0x69, 0x72, 0x44, 0x75,
	0x6d, 0x70, 0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x67, 0x65, 0x78, 0x12, 0x33, 0x0a, 0x14, 0x6d,
	0x6c, 0x69, 0x72, 0x5f, 0x64, 0x75, 0x6d, 0x70, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x72, 0x65,
	0x67, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x02, 0x2e, 0x2a, 0x52, 0x11, 0x6d,
	0x6c, 0x69, 0x72, 0x44, 0x75, 0x6d, 0x70, 0x46, 0x75, 0x6e, 0x63, 0x52, 0x65, 0x67, 0x65, 0x78,
	0x12, 0x33, 0x0a, 0x12, 0x6d, 0x6c, 0x69, 0x72, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61,
	0x6c, 0x73, 0x65, 0x52, 0x10, 0x6d, 0x6c, 0x69, 0x72, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x14, 0x6d, 0x6c, 0x69, 0x72, 0x5f, 0x70, 0x72,
	0x69, 0x6e, 0x74, 0x5f, 0x69, 0x72, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x3a, 0x00, 0x52, 0x11, 0x6d, 0x6c, 0x69, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x74,
	0x49, 0x72, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6d, 0x6c, 0x69, 0x72,
	0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x72, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x3a, 0x00, 0x52, 0x10, 0x6d, 0x6c, 0x69, 0x72, 0x50, 0x72, 0x69,
	0x6e, 0x74, 0x49, 0x72, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x1a, 0x6d, 0x6c, 0x69,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74,
	0x72, 0x75, 0x65, 0x52, 0x16, 0x6d, 0x6c, 0x69, 0x72, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x49, 0x72,
	0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x4a, 0x0a, 0x22, 0x6d,
	0x6c, 0x69, 0x72, 0x5f, 0x65, 0x6c, 0x69, 0x64, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x61, 0x74, 0x74, 0x72, 0x73, 0x5f, 0x69, 0x66, 0x5f, 0x6c, 0x61, 0x72, 0x67, 0x65,
	0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x6d, 0x6c, 0x69, 0x72, 0x45, 0x6c, 0x69,
	0x64, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x61, 0x74, 0x74, 0x72, 0x73, 0x49,
	0x66, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x72, 0x42, 0xed, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x74, 0x65, 0x72, 0x42, 0x11, 0x44, 0x65, 0x62, 0x75, 0x67, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x72, 0x65, 0x6e, 0x61, 0x73, 0x2f, 0x67, 0x6f,
	0x2d, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x6c, 0x69, 0x72, 0x2f, 0x6c, 0x69,
	0x74, 0x65, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0xa2, 0x02, 0x03, 0x54, 0x43, 0x58, 0xaa, 0x02,
	0x14, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x74, 0x65, 0x72, 0xca, 0x02, 0x14, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0xe2, 0x02, 0x20, 0x54,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x74, 0x65, 0x72, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea,
	0x02, 0x15, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72,
}

var (
	file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescData = file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDesc
)

func file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescData)
	})
	return file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDescData
}

var file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_goTypes = []interface{}{
	(*DebugOptions)(nil), // 0: tensorflow.converter.DebugOptions
}
var file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_init() }
func file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_init() {
	if File_tensorflow_compiler_mlir_lite_debug_debug_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_depIdxs,
		MessageInfos:      file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_mlir_lite_debug_debug_options_proto = out.File
	file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_rawDesc = nil
	file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_goTypes = nil
	file_tensorflow_compiler_mlir_lite_debug_debug_options_proto_depIdxs = nil
}
