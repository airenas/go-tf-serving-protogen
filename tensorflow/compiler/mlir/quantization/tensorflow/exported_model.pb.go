// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tensorflow/compiler/mlir/quantization/tensorflow/exported_model.proto

package tensorflow

import (
	framework "github.com/airenas/go-tf-serving-protogen/tensorflow/core/framework"
	protobuf "github.com/airenas/go-tf-serving-protogen/tensorflow/core/protobuf"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Represents an exported TensorFlow model. It consists of a GraphDef and extra
// metadata required for building a SavedModel. This message is primarily used
// to "export" the model produced from various quantization passes in c++ to
// Python layer.
// Next ID: 11
type ExportedModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraphDef *framework.GraphDef `protobuf:"bytes,1,opt,name=graph_def,json=graphDef,proto3" json:"graph_def,omitempty"`
	// Name of the initialization node (TF Operation) used for initializing
	// resources like hash tables upon loading.
	InitNodeName string `protobuf:"bytes,2,opt,name=init_node_name,json=initNodeName,proto3" json:"init_node_name,omitempty"`
	// Path to the directory where checkpoint files are saved. This directoy is
	// not expected to be persistent (usually a temporary directory). When
	// fetching the restore op (see `restore_node_name`), this value is provided
	// to the "file_prefix" tensor to identify the checkpoint directory.
	CheckpointDir string `protobuf:"bytes,5,opt,name=checkpoint_dir,json=checkpointDir,proto3" json:"checkpoint_dir,omitempty"`
	// Function name -> function alias mapping. This associates the quantized
	// functions to the original functions' aliases. This information will be used
	// to populate `MetaInfoDef`s `function_aliases` when the quantized model is
	// exported to the saved model. This field is usually only populated for the
	// TF2 models.
	FunctionAliases map[string]string `protobuf:"bytes,6,rep,name=function_aliases,json=functionAliases,proto3" json:"function_aliases,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Holds information about the asset files used for the model. It essentially
	// associates asset file names with the tensors to which the asset file names
	// should be fed.
	AssetFileDefs []*protobuf.AssetFileDef `protobuf:"bytes,8,rep,name=asset_file_defs,json=assetFileDefs,proto3" json:"asset_file_defs,omitempty"`
	// SaverDef including the information required for saving and restoring
	// variables. This field is not set if there are no variables in the exported
	// graph. If set, the fields `version`, `filename_tensor_name`,
	// `restore_op_name` and `save_tensor_name` are populated.
	SaverDef *protobuf.SaverDef `protobuf:"bytes,10,opt,name=saver_def,json=saverDef,proto3" json:"saver_def,omitempty"`
}

func (x *ExportedModel) Reset() {
	*x = ExportedModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExportedModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportedModel) ProtoMessage() {}

func (x *ExportedModel) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportedModel.ProtoReflect.Descriptor instead.
func (*ExportedModel) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescGZIP(), []int{0}
}

func (x *ExportedModel) GetGraphDef() *framework.GraphDef {
	if x != nil {
		return x.GraphDef
	}
	return nil
}

func (x *ExportedModel) GetInitNodeName() string {
	if x != nil {
		return x.InitNodeName
	}
	return ""
}

func (x *ExportedModel) GetCheckpointDir() string {
	if x != nil {
		return x.CheckpointDir
	}
	return ""
}

func (x *ExportedModel) GetFunctionAliases() map[string]string {
	if x != nil {
		return x.FunctionAliases
	}
	return nil
}

func (x *ExportedModel) GetAssetFileDefs() []*protobuf.AssetFileDef {
	if x != nil {
		return x.AssetFileDefs
	}
	return nil
}

func (x *ExportedModel) GetSaverDef() *protobuf.SaverDef {
	if x != nil {
		return x.SaverDef
	}
	return nil
}

var File_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDesc = []byte{
	0x0a, 0x45, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x6c, 0x69, 0x72, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0x25, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72,
	0x65, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x29, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66,
	0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x24, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63,
	0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x61, 0x76,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9b, 0x04, 0x0a, 0x0d, 0x45, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x31, 0x0a, 0x09, 0x67, 0x72,
	0x61, 0x70, 0x68, 0x5f, 0x64, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x47, 0x72, 0x61, 0x70, 0x68,
	0x44, 0x65, 0x66, 0x52, 0x08, 0x67, 0x72, 0x61, 0x70, 0x68, 0x44, 0x65, 0x66, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x69, 0x72, 0x12, 0x66, 0x0a, 0x10, 0x66, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f,
	0x77, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x45,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73,
	0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x64, 0x65, 0x66, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x66, 0x52, 0x0d, 0x61, 0x73, 0x73, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x44, 0x65, 0x66, 0x73, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x61, 0x76, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x66, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72,
	0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x72, 0x44, 0x65, 0x66, 0x52, 0x08, 0x73,
	0x61, 0x76, 0x65, 0x72, 0x44, 0x65, 0x66, 0x1a, 0x42, 0x0a, 0x14, 0x46, 0x75, 0x6e, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x4a, 0x04, 0x08, 0x03, 0x10,
	0x04, 0x4a, 0x04, 0x08, 0x04, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x4a, 0x04, 0x08,
	0x09, 0x10, 0x0a, 0x52, 0x15, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x11, 0x72, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x0e, 0x73,
	0x61, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x17, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x5f, 0x74, 0x65, 0x6e, 0x73, 0x6f,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x8d, 0x02, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x2e, 0x74,
	0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x5a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x72, 0x65, 0x6e, 0x61, 0x73,
	0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x6c, 0x69, 0x72,
	0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x74, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x54, 0x51,
	0x58, 0xaa, 0x02, 0x17, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02, 0x17, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x5c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0xe2, 0x02, 0x23, 0x54, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x5c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x18, 0x54, 0x65,
	0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x3a, 0x3a, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescData = file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDesc
)

func file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescData)
	})
	return file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDescData
}

var file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_goTypes = []interface{}{
	(*ExportedModel)(nil),         // 0: tensorflow.quantization.ExportedModel
	nil,                           // 1: tensorflow.quantization.ExportedModel.FunctionAliasesEntry
	(*framework.GraphDef)(nil),    // 2: tensorflow.GraphDef
	(*protobuf.AssetFileDef)(nil), // 3: tensorflow.AssetFileDef
	(*protobuf.SaverDef)(nil),     // 4: tensorflow.SaverDef
}
var file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_depIdxs = []int32{
	2, // 0: tensorflow.quantization.ExportedModel.graph_def:type_name -> tensorflow.GraphDef
	1, // 1: tensorflow.quantization.ExportedModel.function_aliases:type_name -> tensorflow.quantization.ExportedModel.FunctionAliasesEntry
	3, // 2: tensorflow.quantization.ExportedModel.asset_file_defs:type_name -> tensorflow.AssetFileDef
	4, // 3: tensorflow.quantization.ExportedModel.saver_def:type_name -> tensorflow.SaverDef
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_init() }
func file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_init() {
	if File_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExportedModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_depIdxs,
		MessageInfos:      file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto = out.File
	file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_rawDesc = nil
	file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_goTypes = nil
	file_tensorflow_compiler_mlir_quantization_tensorflow_exported_model_proto_depIdxs = nil
}
