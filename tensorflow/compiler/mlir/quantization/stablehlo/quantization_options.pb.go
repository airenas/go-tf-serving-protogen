// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: tensorflow/compiler/mlir/quantization/stablehlo/quantization_options.proto

package stablehlo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Preset quantization methods that are supported as a stable API.
// NEXT ID: 5
type PresetQuantizationMethod_PresetMethod int32

const (
	// TODO(b/266173150): Update preset methods after redefining quantization
	// pattern matching in DarwiNN.
	// This should never be used. Using this will generally result in an error.
	PresetQuantizationMethod_METHOD_UNSPECIFIED PresetQuantizationMethod_PresetMethod = 0 // go/do-include-enum-unspecified
	// Apply default weight-only quantization. Weights are quantized during
	// conversion, then dequantized during inference.
	// Activation: f32, Weight: qi8, Bias: f32
	PresetQuantizationMethod_WEIGHT_ONLY PresetQuantizationMethod_PresetMethod = 1
	// Apply default dynamic range quantization. Quantized tensor value's
	// ranges are determined during graph runtime.
	// Activation: f32, Weight: qi8, Bias: f32
	PresetQuantizationMethod_POST_TRAINING_QUANTIZATION_DYNAMIC_RANGE PresetQuantizationMethod_PresetMethod = 2
	// Apply float16 quantization to all the weights. Quantized weights will be
	// dequantized before running inference.
	// Activation: f32, Weight: f16, Bias: f16
	PresetQuantizationMethod_FLOAT16 PresetQuantizationMethod_PresetMethod = 3
	// Apply static range quantization. The quantization range is determined
	// via calibration phase and quantized during conversion.
	// Activation: qi8, Weight: qi8, Bias: qi32
	PresetQuantizationMethod_POST_TRAINING_QUANTIZATION_STATIC_RANGE PresetQuantizationMethod_PresetMethod = 4
)

// Enum value maps for PresetQuantizationMethod_PresetMethod.
var (
	PresetQuantizationMethod_PresetMethod_name = map[int32]string{
		0: "METHOD_UNSPECIFIED",
		1: "WEIGHT_ONLY",
		2: "POST_TRAINING_QUANTIZATION_DYNAMIC_RANGE",
		3: "FLOAT16",
		4: "POST_TRAINING_QUANTIZATION_STATIC_RANGE",
	}
	PresetQuantizationMethod_PresetMethod_value = map[string]int32{
		"METHOD_UNSPECIFIED": 0,
		"WEIGHT_ONLY":        1,
		"POST_TRAINING_QUANTIZATION_DYNAMIC_RANGE": 2,
		"FLOAT16": 3,
		"POST_TRAINING_QUANTIZATION_STATIC_RANGE": 4,
	}
)

func (x PresetQuantizationMethod_PresetMethod) Enum() *PresetQuantizationMethod_PresetMethod {
	p := new(PresetQuantizationMethod_PresetMethod)
	*p = x
	return p
}

func (x PresetQuantizationMethod_PresetMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresetQuantizationMethod_PresetMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[0].Descriptor()
}

func (PresetQuantizationMethod_PresetMethod) Type() protoreflect.EnumType {
	return &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[0]
}

func (x PresetQuantizationMethod_PresetMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresetQuantizationMethod_PresetMethod.Descriptor instead.
func (PresetQuantizationMethod_PresetMethod) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{2, 0}
}

// NEXT ID: 4
type QuantizationComponentSpec_QuantizationComponent int32

const (
	QuantizationComponentSpec_COMPONENT_UNSPECIFIED QuantizationComponentSpec_QuantizationComponent = 0
	QuantizationComponentSpec_COMPONENT_ACTIVATION  QuantizationComponentSpec_QuantizationComponent = 1
	QuantizationComponentSpec_COMPONENT_WEIGHT      QuantizationComponentSpec_QuantizationComponent = 2
	QuantizationComponentSpec_COMPONENT_BIAS        QuantizationComponentSpec_QuantizationComponent = 3
)

// Enum value maps for QuantizationComponentSpec_QuantizationComponent.
var (
	QuantizationComponentSpec_QuantizationComponent_name = map[int32]string{
		0: "COMPONENT_UNSPECIFIED",
		1: "COMPONENT_ACTIVATION",
		2: "COMPONENT_WEIGHT",
		3: "COMPONENT_BIAS",
	}
	QuantizationComponentSpec_QuantizationComponent_value = map[string]int32{
		"COMPONENT_UNSPECIFIED": 0,
		"COMPONENT_ACTIVATION":  1,
		"COMPONENT_WEIGHT":      2,
		"COMPONENT_BIAS":        3,
	}
)

func (x QuantizationComponentSpec_QuantizationComponent) Enum() *QuantizationComponentSpec_QuantizationComponent {
	p := new(QuantizationComponentSpec_QuantizationComponent)
	*p = x
	return p
}

func (x QuantizationComponentSpec_QuantizationComponent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuantizationComponentSpec_QuantizationComponent) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[1].Descriptor()
}

func (QuantizationComponentSpec_QuantizationComponent) Type() protoreflect.EnumType {
	return &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[1]
}

func (x QuantizationComponentSpec_QuantizationComponent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuantizationComponentSpec_QuantizationComponent.Descriptor instead.
func (QuantizationComponentSpec_QuantizationComponent) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{4, 0}
}

// NEXT ID: 5
type QuantizationComponentSpec_BitWidth int32

const (
	QuantizationComponentSpec_BIT_WIDTH_UNSPECIFIED QuantizationComponentSpec_BitWidth = 0
	QuantizationComponentSpec_BIT_WIDTH_4           QuantizationComponentSpec_BitWidth = 1
	QuantizationComponentSpec_BIT_WIDTH_8           QuantizationComponentSpec_BitWidth = 2
	QuantizationComponentSpec_BIT_WIDTH_16          QuantizationComponentSpec_BitWidth = 3
	QuantizationComponentSpec_BIT_WIDTH_32          QuantizationComponentSpec_BitWidth = 4
)

// Enum value maps for QuantizationComponentSpec_BitWidth.
var (
	QuantizationComponentSpec_BitWidth_name = map[int32]string{
		0: "BIT_WIDTH_UNSPECIFIED",
		1: "BIT_WIDTH_4",
		2: "BIT_WIDTH_8",
		3: "BIT_WIDTH_16",
		4: "BIT_WIDTH_32",
	}
	QuantizationComponentSpec_BitWidth_value = map[string]int32{
		"BIT_WIDTH_UNSPECIFIED": 0,
		"BIT_WIDTH_4":           1,
		"BIT_WIDTH_8":           2,
		"BIT_WIDTH_16":          3,
		"BIT_WIDTH_32":          4,
	}
)

func (x QuantizationComponentSpec_BitWidth) Enum() *QuantizationComponentSpec_BitWidth {
	p := new(QuantizationComponentSpec_BitWidth)
	*p = x
	return p
}

func (x QuantizationComponentSpec_BitWidth) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuantizationComponentSpec_BitWidth) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[2].Descriptor()
}

func (QuantizationComponentSpec_BitWidth) Type() protoreflect.EnumType {
	return &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[2]
}

func (x QuantizationComponentSpec_BitWidth) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuantizationComponentSpec_BitWidth.Descriptor instead.
func (QuantizationComponentSpec_BitWidth) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{4, 1}
}

// NEXT ID: 4
type QuantizationComponentSpec_BitType int32

const (
	QuantizationComponentSpec_BIT_TYPE_UNSPECIFIED QuantizationComponentSpec_BitType = 0
	QuantizationComponentSpec_BIT_TYPE_INT         QuantizationComponentSpec_BitType = 1
	QuantizationComponentSpec_BIT_TYPE_FLOAT       QuantizationComponentSpec_BitType = 2
	QuantizationComponentSpec_BIT_TYPE_BFLOAT      QuantizationComponentSpec_BitType = 3
)

// Enum value maps for QuantizationComponentSpec_BitType.
var (
	QuantizationComponentSpec_BitType_name = map[int32]string{
		0: "BIT_TYPE_UNSPECIFIED",
		1: "BIT_TYPE_INT",
		2: "BIT_TYPE_FLOAT",
		3: "BIT_TYPE_BFLOAT",
	}
	QuantizationComponentSpec_BitType_value = map[string]int32{
		"BIT_TYPE_UNSPECIFIED": 0,
		"BIT_TYPE_INT":         1,
		"BIT_TYPE_FLOAT":       2,
		"BIT_TYPE_BFLOAT":      3,
	}
)

func (x QuantizationComponentSpec_BitType) Enum() *QuantizationComponentSpec_BitType {
	p := new(QuantizationComponentSpec_BitType)
	*p = x
	return p
}

func (x QuantizationComponentSpec_BitType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QuantizationComponentSpec_BitType) Descriptor() protoreflect.EnumDescriptor {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[3].Descriptor()
}

func (QuantizationComponentSpec_BitType) Type() protoreflect.EnumType {
	return &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes[3]
}

func (x QuantizationComponentSpec_BitType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QuantizationComponentSpec_BitType.Descriptor instead.
func (QuantizationComponentSpec_BitType) EnumDescriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{4, 2}
}

// Defines arious options to specify and control the behavior of the
// StableHLO quantizer.
// NEXT ID: 2
type QuantizationOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuantizationMethod *QuantizationMethod `protobuf:"bytes,1,opt,name=quantization_method,json=quantizationMethod,proto3" json:"quantization_method,omitempty"`
}

func (x *QuantizationOptions) Reset() {
	*x = QuantizationOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantizationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantizationOptions) ProtoMessage() {}

func (x *QuantizationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantizationOptions.ProtoReflect.Descriptor instead.
func (*QuantizationOptions) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{0}
}

func (x *QuantizationOptions) GetQuantizationMethod() *QuantizationMethod {
	if x != nil {
		return x.QuantizationMethod
	}
	return nil
}

// NEXT ID: 3
type QuantizationMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Quantization Method can be either preset or custom.
	//
	// Types that are assignable to QuantizationMethod:
	//
	//	*QuantizationMethod_PresetQuantizationMethod
	//	*QuantizationMethod_CustomQuantizationMethod
	QuantizationMethod isQuantizationMethod_QuantizationMethod `protobuf_oneof:"quantization_method"`
}

func (x *QuantizationMethod) Reset() {
	*x = QuantizationMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantizationMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantizationMethod) ProtoMessage() {}

func (x *QuantizationMethod) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantizationMethod.ProtoReflect.Descriptor instead.
func (*QuantizationMethod) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{1}
}

func (m *QuantizationMethod) GetQuantizationMethod() isQuantizationMethod_QuantizationMethod {
	if m != nil {
		return m.QuantizationMethod
	}
	return nil
}

func (x *QuantizationMethod) GetPresetQuantizationMethod() *PresetQuantizationMethod {
	if x, ok := x.GetQuantizationMethod().(*QuantizationMethod_PresetQuantizationMethod); ok {
		return x.PresetQuantizationMethod
	}
	return nil
}

func (x *QuantizationMethod) GetCustomQuantizationMethod() *CustomQuantizationMethod {
	if x, ok := x.GetQuantizationMethod().(*QuantizationMethod_CustomQuantizationMethod); ok {
		return x.CustomQuantizationMethod
	}
	return nil
}

type isQuantizationMethod_QuantizationMethod interface {
	isQuantizationMethod_QuantizationMethod()
}

type QuantizationMethod_PresetQuantizationMethod struct {
	PresetQuantizationMethod *PresetQuantizationMethod `protobuf:"bytes,1,opt,name=preset_quantization_method,json=presetQuantizationMethod,proto3,oneof"`
}

type QuantizationMethod_CustomQuantizationMethod struct {
	CustomQuantizationMethod *CustomQuantizationMethod `protobuf:"bytes,2,opt,name=custom_quantization_method,json=customQuantizationMethod,proto3,oneof"`
}

func (*QuantizationMethod_PresetQuantizationMethod) isQuantizationMethod_QuantizationMethod() {}

func (*QuantizationMethod_CustomQuantizationMethod) isQuantizationMethod_QuantizationMethod() {}

// Preset model quantization method for optimization.
//
// Common quantization methods are defined as preset methods in this message.
// Note that the quantization specs (ex: bit width) for preset quantization
// methods are fixed. To use a different quantization spec for a given method,
// use CustomQuantizationMethod.
// NEXT ID: 2
type PresetQuantizationMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PresetMethod PresetQuantizationMethod_PresetMethod `protobuf:"varint,1,opt,name=preset_method,json=presetMethod,proto3,enum=stablehlo.quantization.PresetQuantizationMethod_PresetMethod" json:"preset_method,omitempty"`
}

func (x *PresetQuantizationMethod) Reset() {
	*x = PresetQuantizationMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresetQuantizationMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresetQuantizationMethod) ProtoMessage() {}

func (x *PresetQuantizationMethod) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresetQuantizationMethod.ProtoReflect.Descriptor instead.
func (*PresetQuantizationMethod) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{2}
}

func (x *PresetQuantizationMethod) GetPresetMethod() PresetQuantizationMethod_PresetMethod {
	if x != nil {
		return x.PresetMethod
	}
	return PresetQuantizationMethod_METHOD_UNSPECIFIED
}

// Custom option for specifying quantization spec details.
// If the selected quantization option is not available, StableHLO quantizer
// will raise an error.
// NEXT ID: 2
type CustomQuantizationMethod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Specify component name, bit width, and other specs for all compoenents
	// intended to be quantized.
	QuantizationComponentSpec []*QuantizationComponentSpec `protobuf:"bytes,1,rep,name=quantization_component_spec,json=quantizationComponentSpec,proto3" json:"quantization_component_spec,omitempty"`
}

func (x *CustomQuantizationMethod) Reset() {
	*x = CustomQuantizationMethod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomQuantizationMethod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomQuantizationMethod) ProtoMessage() {}

func (x *CustomQuantizationMethod) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomQuantizationMethod.ProtoReflect.Descriptor instead.
func (*CustomQuantizationMethod) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{3}
}

func (x *CustomQuantizationMethod) GetQuantizationComponentSpec() []*QuantizationComponentSpec {
	if x != nil {
		return x.QuantizationComponentSpec
	}
	return nil
}

// Quantization spec per each component designated to be quantized.
// Components whose QuantizationComponentSpec is not specified will not be
// quantized, and remain f32.
// NEXT ID: 7
type QuantizationComponentSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuantizationComponent QuantizationComponentSpec_QuantizationComponent `protobuf:"varint,1,opt,name=quantization_component,json=quantizationComponent,proto3,enum=stablehlo.quantization.QuantizationComponentSpec_QuantizationComponent" json:"quantization_component,omitempty"`
	// Defines the target bit of the data.
	BitWidth QuantizationComponentSpec_BitWidth `protobuf:"varint,2,opt,name=bit_width,json=bitWidth,proto3,enum=stablehlo.quantization.QuantizationComponentSpec_BitWidth" json:"bit_width,omitempty"`
	// Defines the type of data of the quantized component.
	BitType QuantizationComponentSpec_BitType `protobuf:"varint,3,opt,name=bit_type,json=bitType,proto3,enum=stablehlo.quantization.QuantizationComponentSpec_BitType" json:"bit_type,omitempty"`
	// Defines whether quantization is done in narrow range.
	EnableNarrowRange bool `protobuf:"varint,4,opt,name=enable_narrow_range,json=enableNarrowRange,proto3" json:"enable_narrow_range,omitempty"`
	// Defines whether quantiation is done per-channel.
	EnablePerChannelQuantization bool `protobuf:"varint,5,opt,name=enable_per_channel_quantization,json=enablePerChannelQuantization,proto3" json:"enable_per_channel_quantization,omitempty"`
	// Defines whether quantization is done symmetrically.
	EnableSymmetric bool `protobuf:"varint,6,opt,name=enable_symmetric,json=enableSymmetric,proto3" json:"enable_symmetric,omitempty"`
}

func (x *QuantizationComponentSpec) Reset() {
	*x = QuantizationComponentSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuantizationComponentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuantizationComponentSpec) ProtoMessage() {}

func (x *QuantizationComponentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuantizationComponentSpec.ProtoReflect.Descriptor instead.
func (*QuantizationComponentSpec) Descriptor() ([]byte, []int) {
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP(), []int{4}
}

func (x *QuantizationComponentSpec) GetQuantizationComponent() QuantizationComponentSpec_QuantizationComponent {
	if x != nil {
		return x.QuantizationComponent
	}
	return QuantizationComponentSpec_COMPONENT_UNSPECIFIED
}

func (x *QuantizationComponentSpec) GetBitWidth() QuantizationComponentSpec_BitWidth {
	if x != nil {
		return x.BitWidth
	}
	return QuantizationComponentSpec_BIT_WIDTH_UNSPECIFIED
}

func (x *QuantizationComponentSpec) GetBitType() QuantizationComponentSpec_BitType {
	if x != nil {
		return x.BitType
	}
	return QuantizationComponentSpec_BIT_TYPE_UNSPECIFIED
}

func (x *QuantizationComponentSpec) GetEnableNarrowRange() bool {
	if x != nil {
		return x.EnableNarrowRange
	}
	return false
}

func (x *QuantizationComponentSpec) GetEnablePerChannelQuantization() bool {
	if x != nil {
		return x.EnablePerChannelQuantization
	}
	return false
}

func (x *QuantizationComponentSpec) GetEnableSymmetric() bool {
	if x != nil {
		return x.EnableSymmetric
	}
	return false
}

var File_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto protoreflect.FileDescriptor

var file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDesc = []byte{
	0x0a, 0x4a, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c, 0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d,
	0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x6c, 0x69, 0x72, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c,
	0x6f, 0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x13, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5b, 0x0a, 0x13, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x52, 0x12, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x8f, 0x02, 0x0a, 0x12, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x70, 0x0a, 0x1a, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x18, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x12, 0x70, 0x0a, 0x1a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c,
	0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x18, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0xa0, 0x02, 0x0a, 0x18, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x62, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d,
	0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x52, 0x0c, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x0c,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x12,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x4f,
	0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x2c, 0x0a, 0x28, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x52,
	0x41, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x5a, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x59, 0x4e, 0x41, 0x4d, 0x49, 0x43, 0x5f, 0x52, 0x41, 0x4e, 0x47,
	0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x31, 0x36, 0x10, 0x03,
	0x12, 0x2b, 0x0a, 0x27, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x49, 0x4e,
	0x47, 0x5f, 0x51, 0x55, 0x41, 0x4e, 0x54, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x04, 0x22, 0x8d, 0x01,
	0x0a, 0x18, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x71, 0x0a, 0x1b, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x31, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e,
	0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70,
	0x65, 0x63, 0x52, 0x19, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x22, 0xb1, 0x06,
	0x0a, 0x19, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x12, 0x7e, 0x0a, 0x16, 0x71,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x47, 0x2e, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x15, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x57, 0x0a, 0x09, 0x62,
	0x69, 0x74, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3a,
	0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x2e, 0x42, 0x69, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x52, 0x08, 0x62, 0x69, 0x74, 0x57,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x54, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x39, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68,
	0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x2e, 0x42, 0x69, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x07, 0x62, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x72, 0x72, 0x6f, 0x77, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e,
	0x61, 0x72, 0x72, 0x6f, 0x77, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x1c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x65, 0x72, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x29, 0x0a, 0x10, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x79, 0x6d, 0x6d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x76, 0x0a, 0x15,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45,
	0x4e, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f,
	0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x57, 0x45, 0x49, 0x47, 0x48, 0x54, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x42, 0x49,
	0x41, 0x53, 0x10, 0x03, 0x22, 0x6b, 0x0a, 0x08, 0x42, 0x69, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x19, 0x0a, 0x15, 0x42, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x42,
	0x49, 0x54, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f, 0x34, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b,
	0x42, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f, 0x38, 0x10, 0x02, 0x12, 0x10, 0x0a,
	0x0c, 0x42, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f, 0x31, 0x36, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x42, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x44, 0x54, 0x48, 0x5f, 0x33, 0x32, 0x10,
	0x04, 0x22, 0x5e, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14,
	0x42, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x42, 0x49, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x49, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x42, 0x49, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10,
	0x03, 0x42, 0x8d, 0x02, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x68, 0x6c, 0x6f, 0x2e, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x18, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x59, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x69, 0x72, 0x65, 0x6e, 0x61, 0x73,
	0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x66, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x6e, 0x67, 0x2d, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x65, 0x6e, 0x73, 0x6f, 0x72, 0x66, 0x6c,
	0x6f, 0x77, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x72, 0x2f, 0x6d, 0x6c, 0x69, 0x72,
	0x2f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0xf8, 0x01, 0x01, 0xa2, 0x02, 0x03, 0x53, 0x51, 0x58,
	0xaa, 0x02, 0x16, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x2e, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0xca, 0x02, 0x16, 0x53, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x5c, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0xe2, 0x02, 0x22, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x68, 0x6c, 0x6f, 0x5c, 0x51,
	0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x17, 0x53, 0x74, 0x61, 0x62, 0x6c, 0x65,
	0x68, 0x6c, 0x6f, 0x3a, 0x3a, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescOnce sync.Once
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescData = file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDesc
)

func file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescGZIP() []byte {
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescOnce.Do(func() {
		file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescData = protoimpl.X.CompressGZIP(file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescData)
	})
	return file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDescData
}

var file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_goTypes = []interface{}{
	(PresetQuantizationMethod_PresetMethod)(0),           // 0: stablehlo.quantization.PresetQuantizationMethod.PresetMethod
	(QuantizationComponentSpec_QuantizationComponent)(0), // 1: stablehlo.quantization.QuantizationComponentSpec.QuantizationComponent
	(QuantizationComponentSpec_BitWidth)(0),              // 2: stablehlo.quantization.QuantizationComponentSpec.BitWidth
	(QuantizationComponentSpec_BitType)(0),               // 3: stablehlo.quantization.QuantizationComponentSpec.BitType
	(*QuantizationOptions)(nil),                          // 4: stablehlo.quantization.QuantizationOptions
	(*QuantizationMethod)(nil),                           // 5: stablehlo.quantization.QuantizationMethod
	(*PresetQuantizationMethod)(nil),                     // 6: stablehlo.quantization.PresetQuantizationMethod
	(*CustomQuantizationMethod)(nil),                     // 7: stablehlo.quantization.CustomQuantizationMethod
	(*QuantizationComponentSpec)(nil),                    // 8: stablehlo.quantization.QuantizationComponentSpec
}
var file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_depIdxs = []int32{
	5, // 0: stablehlo.quantization.QuantizationOptions.quantization_method:type_name -> stablehlo.quantization.QuantizationMethod
	6, // 1: stablehlo.quantization.QuantizationMethod.preset_quantization_method:type_name -> stablehlo.quantization.PresetQuantizationMethod
	7, // 2: stablehlo.quantization.QuantizationMethod.custom_quantization_method:type_name -> stablehlo.quantization.CustomQuantizationMethod
	0, // 3: stablehlo.quantization.PresetQuantizationMethod.preset_method:type_name -> stablehlo.quantization.PresetQuantizationMethod.PresetMethod
	8, // 4: stablehlo.quantization.CustomQuantizationMethod.quantization_component_spec:type_name -> stablehlo.quantization.QuantizationComponentSpec
	1, // 5: stablehlo.quantization.QuantizationComponentSpec.quantization_component:type_name -> stablehlo.quantization.QuantizationComponentSpec.QuantizationComponent
	2, // 6: stablehlo.quantization.QuantizationComponentSpec.bit_width:type_name -> stablehlo.quantization.QuantizationComponentSpec.BitWidth
	3, // 7: stablehlo.quantization.QuantizationComponentSpec.bit_type:type_name -> stablehlo.quantization.QuantizationComponentSpec.BitType
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_init() }
func file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_init() {
	if File_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantizationOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantizationMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresetQuantizationMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomQuantizationMethod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuantizationComponentSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*QuantizationMethod_PresetQuantizationMethod)(nil),
		(*QuantizationMethod_CustomQuantizationMethod)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_goTypes,
		DependencyIndexes: file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_depIdxs,
		EnumInfos:         file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_enumTypes,
		MessageInfos:      file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_msgTypes,
	}.Build()
	File_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto = out.File
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_rawDesc = nil
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_goTypes = nil
	file_tensorflow_compiler_mlir_quantization_stablehlo_quantization_options_proto_depIdxs = nil
}
